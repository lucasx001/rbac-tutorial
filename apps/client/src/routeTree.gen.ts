/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HomeRouteRouteImport } from './routes/home/route'
import { Route as SessionRouteRouteImport } from './routes/_session/route'
import { Route as HomeIndexRouteImport } from './routes/home/index'
import { Route as HomeAboutRouteImport } from './routes/home/about'
import { Route as SessionSignUpRouteImport } from './routes/_session/sign-up'
import { Route as SessionSignInRouteImport } from './routes/_session/sign-in'

const HomeRouteRoute = HomeRouteRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const SessionRouteRoute = SessionRouteRouteImport.update({
  id: '/_session',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeAboutRoute = HomeAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => HomeRouteRoute,
} as any)
const SessionSignUpRoute = SessionSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => SessionRouteRoute,
} as any)
const SessionSignInRoute = SessionSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => SessionRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/home': typeof HomeRouteRouteWithChildren
  '/sign-in': typeof SessionSignInRoute
  '/sign-up': typeof SessionSignUpRoute
  '/home/about': typeof HomeAboutRoute
  '/home/': typeof HomeIndexRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof SessionSignInRoute
  '/sign-up': typeof SessionSignUpRoute
  '/home/about': typeof HomeAboutRoute
  '/home': typeof HomeIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_session': typeof SessionRouteRouteWithChildren
  '/home': typeof HomeRouteRouteWithChildren
  '/_session/sign-in': typeof SessionSignInRoute
  '/_session/sign-up': typeof SessionSignUpRoute
  '/home/about': typeof HomeAboutRoute
  '/home/': typeof HomeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/home' | '/sign-in' | '/sign-up' | '/home/about' | '/home/'
  fileRoutesByTo: FileRoutesByTo
  to: '/sign-in' | '/sign-up' | '/home/about' | '/home'
  id:
    | '__root__'
    | '/_session'
    | '/home'
    | '/_session/sign-in'
    | '/_session/sign-up'
    | '/home/about'
    | '/home/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  SessionRouteRoute: typeof SessionRouteRouteWithChildren
  HomeRouteRoute: typeof HomeRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_session': {
      id: '/_session'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SessionRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home/': {
      id: '/home/'
      path: '/'
      fullPath: '/home/'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/home/about': {
      id: '/home/about'
      path: '/about'
      fullPath: '/home/about'
      preLoaderRoute: typeof HomeAboutRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/_session/sign-up': {
      id: '/_session/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SessionSignUpRouteImport
      parentRoute: typeof SessionRouteRoute
    }
    '/_session/sign-in': {
      id: '/_session/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SessionSignInRouteImport
      parentRoute: typeof SessionRouteRoute
    }
  }
}

interface SessionRouteRouteChildren {
  SessionSignInRoute: typeof SessionSignInRoute
  SessionSignUpRoute: typeof SessionSignUpRoute
}

const SessionRouteRouteChildren: SessionRouteRouteChildren = {
  SessionSignInRoute: SessionSignInRoute,
  SessionSignUpRoute: SessionSignUpRoute,
}

const SessionRouteRouteWithChildren = SessionRouteRoute._addFileChildren(
  SessionRouteRouteChildren,
)

interface HomeRouteRouteChildren {
  HomeAboutRoute: typeof HomeAboutRoute
  HomeIndexRoute: typeof HomeIndexRoute
}

const HomeRouteRouteChildren: HomeRouteRouteChildren = {
  HomeAboutRoute: HomeAboutRoute,
  HomeIndexRoute: HomeIndexRoute,
}

const HomeRouteRouteWithChildren = HomeRouteRoute._addFileChildren(
  HomeRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  SessionRouteRoute: SessionRouteRouteWithChildren,
  HomeRouteRoute: HomeRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
